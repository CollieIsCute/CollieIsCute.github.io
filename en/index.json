[{"content":" 原始題目 # 給定字串包含 { '+', '-', ' ', '(', ')'} 以及數字，求出算式答案。\n值得紀錄之處 # 處理太多條件分支 # 我覺得這題最麻煩的坑在於符號太多種了。如果用 if 來寫的話，會有太多條件分支（ branch condition ），所以我一直很想把某些 branch 合在一起。比如說：\n+, - 後面跟著 ( +, - 後面跟著數字 +, - 後面是 , 而再之後還可以混合前兩項組合出更多種變化。 這樣乘起來情況非常多，也很難維護。如果可以忽略掉 +, -, 只在遇到數字和 ( 的時候，再往回檢查符號，就可以減少需要列舉的情況數量了。\n處理空格： erase + remove_if # 如果可以使得字串裡面完全沒有空格，那需要處理的情況也可以再更加精簡。 C++ 裡面有一套 erase + remove_if 組合技可以用：\ns.erase(remove_if(s.begin(), s.end(), [](unsigned char ch) { return std::isspace(ch); }), s.end()); remove 系列 v.s. erase # 這兩個我以前都一直搞不清楚差異，直到寫這題時認真去研究他們之間的差別並紀錄於此。\nForwardIt remove(ForwardIt first, ForwardIt last, const T\u0026amp; value): 它在做的事情是移動元素，並不包含刪除元素本身。如果 [first, end) 區間內有任何元素的值 == value 則把後面的資料指派給目前這一格元素，最後再回傳一個 iterator 物件當作待會要 erase() 的起始點，時間複雜度比寫個迴圈不斷 find 並刪除快很多（ $O(n^2)$ v.s. $O(n)$ ），我覺得 cppreference 複製過來的實作蠻有趣的，有興趣的話推薦讀看看。 template\u0026lt; class ForwardIt, class T \u0026gt; ForwardIt remove(ForwardIt first, ForwardIt last, const T\u0026amp; value) { first = std::find(first, last, value); if (first != last) for(ForwardIt i = first; ++i != last; ) if (!(*i == value)) *first++ = std::move(*i); return first; } 至於 erase() 則是可以傳入頭尾兩個 iterator 參數，刪除該區間並且把頭尾接上。 remove_if() 跟 remove() 有點像，只是第三個參數是放一個回傳值可被轉成 bool 的函數。它會去呼叫那個函數，並從回傳值判斷要不要 remove 掉元素內的資料。 stack 處理變號 # 直覺上採用 stack 來判斷括號內區域要不要變號，進入括號就 push 一個新的符號，離開括號則 pop 最上面的符號，即可完成判斷。（如果有 *, / 會比較麻煩，要多處理四則運算優先度的問題，還好這題不用😅）\niterator 問題 # 似乎不能把他理解為按照大小排列的指標，紀錄我把他當作指標用時遇到的坑：\n沒有 \u0026lt;= operator, 如果用以下的寫法會有問題。要寫成 != 才正統。 for(auto it = obj.begin(); it \u0026lt;= obj.end(); obj++){ // do something } iterator 沒有直接加上某個常數的運算，但是指標有這種 Syntactic sugar 可以自動根據型別決定要往前多少個 bytes. auto it = obj.begin(); // auto it = it + 3; // 沒有這種運算 std::advance(it, 3); // 好用的移動多步工具 如果之後能夠更深入了解 iterator 的底層實作，再來寫一篇紀錄我對於 iterator 的了解好了😆\nSolution # 原本想多了解 iterator, 可是寫完 AC 之後發現他有不少需要往前往後跳多格的操作，還是 index 的寫法可以比較簡短，因此最後又改回現在這樣了😛\n// after parsing, put `it` represent the last digit of num int parse_num(int\u0026amp; num_head, const string\u0026amp; s){ int cnt = 0, sign = (num_head \u0026gt; 0 \u0026amp;\u0026amp; s[num_head - 1] == \u0026#39;-\u0026#39;) ? -1 : 1; for(; isdigit(s[num_head + cnt]); cnt++) ; int n = stoi(s.substr(num_head, cnt)); num_head += (cnt - 1); return n * sign; } class Solution { public: int calculate(string s) { s.erase(remove_if(s.begin(), s.end(), [](unsigned char ch) { return std::isspace(ch); }), s.end()); stack\u0026lt;int\u0026gt; sign_stack{}; int ret = 0, cur_sign = 1; for(auto it = 0; it \u0026lt; s.size(); it++) if(isdigit(s[it])) ret += parse_num(it, s) * cur_sign; else if(s[it] == \u0026#39;(\u0026#39;){ if(it\u0026gt;0 \u0026amp;\u0026amp; s[it-1] == \u0026#39;-\u0026#39;) sign_stack.push(-1); else sign_stack.push(1); cur_sign *= sign_stack.top(); } else if(s[it] == \u0026#39;)\u0026#39;){ cur_sign /= sign_stack.top(); sign_stack.pop(); } return ret; } }; ","date":"November 22, 2022","externalUrl":null,"permalink":"/posts/leetcode/224/","section":"posts-index","summary":"\u003ch2 class=\"relative group\"\u003e\u003ca href=\"https://leetcode.com/problems/basic-calculator/\" target=\"_blank\"\u003e原始題目\u003c/a\u003e \n    \u003cdiv id=\"%E5%8E%9F%E5%A7%8B%E9%A1%8C%E7%9B%AE\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%E5%8E%9F%E5%A7%8B%E9%A1%8C%E7%9B%AE\" aria-label=\"定位點\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cp\u003e給定字串包含 \u003ccode\u003e{ '+', '-', ' ', '(', ')'}\u003c/code\u003e 以及數字，求出算式答案。\u003c/p\u003e\n\n\n\u003ch2 class=\"relative group\"\u003e值得紀錄之處 \n    \u003cdiv id=\"%E5%80%BC%E5%BE%97%E7%B4%80%E9%8C%84%E4%B9%8B%E8%99%95\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%E5%80%BC%E5%BE%97%E7%B4%80%E9%8C%84%E4%B9%8B%E8%99%95\" aria-label=\"定位點\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\n\n\u003ch3 class=\"relative group\"\u003e處理太多條件分支 \n    \u003cdiv id=\"%E8%99%95%E7%90%86%E5%A4%AA%E5%A4%9A%E6%A2%9D%E4%BB%B6%E5%88%86%E6%94%AF\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%E8%99%95%E7%90%86%E5%A4%AA%E5%A4%9A%E6%A2%9D%E4%BB%B6%E5%88%86%E6%94%AF\" aria-label=\"定位點\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h3\u003e\n\u003cp\u003e我覺得這題最麻煩的坑在於符號太多種了。如果用 \u003ccode\u003eif\u003c/code\u003e 來寫的話，會有太多條件分支（ branch condition ），所以我一直很想把某些 branch 合在一起。比如說：\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\u003ccode\u003e+\u003c/code\u003e, \u003ccode\u003e-\u003c/code\u003e 後面跟著 \u003ccode\u003e(\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e+\u003c/code\u003e, \u003ccode\u003e-\u003c/code\u003e 後面跟著數字\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e+\u003c/code\u003e, \u003ccode\u003e-\u003c/code\u003e 後面是 \u003ccode\u003e \u003c/code\u003e, 而再之後還可以混合前兩項組合出更多種變化。\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e這樣乘起來情況非常多，也很難維護。如果可以忽略掉 \u003ccode\u003e+\u003c/code\u003e, \u003ccode\u003e-\u003c/code\u003e, 只在遇到數字和 \u003ccode\u003e(\u003c/code\u003e 的時候，再往回檢查符號，就可以減少需要列舉的情況數量了。\u003c/p\u003e","title":"224. Basic Calculator","type":"posts"},{"content":"","date":"November 22, 2022","externalUrl":null,"permalink":"/tags/c++/","section":"Tags","summary":"","title":"C++","type":"tags"},{"content":"","date":"November 22, 2022","externalUrl":null,"permalink":"/tags/iterator/","section":"Tags","summary":"","title":"Iterator","type":"tags"},{"content":"","date":"November 22, 2022","externalUrl":null,"permalink":"/tags/leetcode/","section":"Tags","summary":"","title":"Leetcode","type":"tags"},{"content":"拜讀了你所不知道的 C 語言： linked list 和非連續記憶體一文中所提到的 \u0026ldquo;good taste\u0026rdquo; 段落 , 覺得非常有趣而躍躍欲試，所以找這題來練練手。（後來發現底下的例子也有寫到這題😅，而且效率又比我想到的解更好，甚至還有一些記憶體管理的細節，學到了！）\n原始題目 # 這題是給定一個不固定長度 \\(n\\) 的鏈結串列，然後要求刪除最中間的那個節點（ node ） （精確來說是第 \\(\\lfloor \\frac{n}{2} \\rfloor\\) 個節點）\n值得紀錄之處 # 這裡所謂的 good taste 是指利用一些技巧，去減少「特例」發生的情形，進而使程式碼更加乾脆俐落。舉例來說，原本在這題常見的解法有兩種：\n先用迴圈把整個鏈結串列遍歷，計算有幾個節點。算完再跑一次 for 迴圈把最中間的節點刪除。 利用 fast 和 slow 兩指標，丟進迴圈裡面， fast 每回合前進兩格， slow 每回合前進一格，這樣只要一次迴圈就可以抓到要刪除的節點並且刪除。\n兩者的時間複雜度都是 \\( \\log (n)\\), 但是後者的程式碼量會因為少一個迴圈而比較少，因此我以後者為比較標準。 非 indirect pointer 的解 # 此程式碼取自 leetcode 論壇的某位大大寫的詳解文章微調而得 class Solution { public: ListNode* deleteMiddle(ListNode* head) { if (head -\u0026gt; next == nullptr) return nullptr; ListNode *slow = head, *fast = head -\u0026gt; next -\u0026gt; next; while (fast != nullptr \u0026amp;\u0026amp; fast -\u0026gt; next != nullptr) { slow = slow -\u0026gt; next; fast = fast -\u0026gt; next -\u0026gt; next; } slow -\u0026gt; next = slow -\u0026gt; next -\u0026gt; next; return head; } }; 可以注意到，上面的解法 (line 4) 會有一個特例 (edge case), 如果開頭是 nullptr, 那就如何如何\u0026hellip;\u0026hellip;。有時候特例一多，可能會寫了整面的 if-else, 看了就痛苦😵‍💫。如果有個魔法可以使這個特例更減少，那程式碼就可以更精簡，這也是我這次的練習目標。\n因為題意規定 1 \u0026lt;= node.size() \u0026lt;= 100000, 因此前者的原本的做法：\n不用判斷是否為空 list 要判斷是否只有一個 node, 若是只有一個 node, 則把該 node 刪除 若非只有一個 node, 則按照 fast, slow 做法從頭開始經過此 list 每個節點。 flowchart LR slow --\u003e node_1 subgraph node_1 next_1 end next_1 --\u003e target subgraph target next_2 end next_2 --\u003e node_3 subgraph node_3 next_3 end 如果我想操作 slow 指標來達成刪除的功能（暫不探討釋放記憶體的部分），就需要把被刪除的目標前一個 node 的 node-\u0026gt;next 指向目標後一個 node 的 node-\u0026gt;next, 所以最後 slow 會指向目標的上一個 node, 而 slow-\u0026gt;next 才是要被刪除的節點。(前述程式碼 line 11)\n另外根據題意可得，當 list 具有 1 個 node 跟 2~3 個 node 時，需要刪除的目標會不一樣 。\n這會有個問題：我沒辦法巧妙的透過 initialize slow 跟 fast 兩個指標, 使得 edge case 被消滅。換言之，當 list 只有 1 個 node 的時候，我需要特別操作 head 而不是 slow, 才能把目標 node 刪除。 因此才有了下面 indirect pointer 的解法。\n承上所述，我會需要某個「東西」，這個東西有辦法視情況具有 head 或 slow 的功能，而那個東西就是間接指標 (indirect pointer) ，一種指向指標的記憶體位址的指標（有點繞舌😆）。\n原本 slow 無法對 head 造成影響 flowchart LR slow --\u003e node_1 head --\u003e node_1 subgraph node_1 next_1 end next_1 --\u003e target subgraph target next_2 end next_2 --\u003e node_3 subgraph node_3 next_3 end 使用 indirect_del 可以修改 head\n刪除前 flowchart LR indirect_del ==\u003e head head --\u003e target subgraph target next_1 end next_1 --\u003e node_2 subgraph node_2 next_2 end next_2 --\u003e node_3 subgraph node_3 next_3 end // 因為沒有 edge case, 所以跟後面刪除中間節點的程式碼可以一樣 *indirect_del = (*indirect_del)-\u0026gt;next; 刪除後 flowchart LR indirect_del ==\u003e head head --\u003e node_2 subgraph target next_1 end next_1 --\u003e node_2 subgraph node_2 next_2 end next_2 --\u003e node_3 subgraph node_3 next_3 end 使用 indirect_del 也可以刪除中間的任意節點\n刪除前 flowchart LR indirect_del ==\u003e next_1 head --\u003e node_1 subgraph node_1 next_1 end next_1 --\u003e target subgraph target next_2 end next_2 --\u003e node_3 subgraph node_3 next_3 end *indirect_del = (*indirect_del)-\u0026gt;next; 刪除後 flowchart LR indirect_del ==\u003e next_1 head --\u003e node_1 subgraph node_1 next_1 end next_1 --\u003e node_3 subgraph target next_2 end next_2 --\u003e node_3 subgraph node_3 next_3 end indirect pointer 的解 # (這個魔法我在原文花了好幾個小時反覆研究了很多遍，一開始覺得超級不好懂XD)\n// good taste 的解法 class Solution { public: ListNode* deleteMiddle(ListNode* head) { ListNode **indirect_del = \u0026amp;head, *fast = head; // 利用 go_next 去判斷 indirect_del 需不需要前進一格 for(bool go_next = false; fast; fast = fast-\u0026gt;next, go_next = !go_next) indirect_del = go_next ? \u0026amp;(*indirect_del)-\u0026gt;next : indirect_del; *indirect_del = (*indirect_del)-\u0026gt;next; return head; } }; // 比較：多了 edge case 的解法 class Solution { public: ListNode* deleteMiddle(ListNode* head) { if (head -\u0026gt; next == nullptr) return nullptr; ListNode *slow = head, *fast = head -\u0026gt; next -\u0026gt; next; while (fast != nullptr \u0026amp;\u0026amp; fast -\u0026gt; next != nullptr) { slow = slow -\u0026gt; next; fast = fast -\u0026gt; next -\u0026gt; next; } slow -\u0026gt; next = slow -\u0026gt; next -\u0026gt; next; return head; } }; 因為多了這層「間接的關聯」， indirect_del 一開始是指向 head 的地址，因此可以快樂地除去前述惱人的 edge case. 之後 indirect_del 又可以指向任何一個 node 的 node-\u0026gt;next 指標，以獲得所有指標的功能。到這邊可能要多對照幾次兩者之間有無 \u0026ldquo;indirect pointer\u0026rdquo; 的差別會比較容易理解，理解之後不禁感嘆程式這門藝術真是博大精深！\n","date":"October 22, 2022","externalUrl":null,"permalink":"/posts/leetcode/2095/","section":"posts-index","summary":"\u003cp\u003e拜讀了\u003ca href=\"https://hackmd.io/@sysprog/c-linked-list#%E5%BE%9E-Linux-%E6%A0%B8%E5%BF%83%E7%9A%84%E8%97%9D%E8%A1%93%E8%AB%87%E8%B5%B7\" target=\"_blank\"\u003e你所不知道的 C 語言： linked list 和非連續記憶體\u003c/a\u003e一文中所提到的 \u0026ldquo;\u003cstrong\u003egood taste\u003c/strong\u003e\u0026rdquo; 段落 , 覺得非常有趣而躍躍欲試，所以找這題來練練手。（後來發現底下的例子也有寫到這題😅，而且效率又比我想到的解更好，甚至還有一些記憶體管理的細節，學到了！）\u003c/p\u003e\n\n\n\u003ch2 class=\"relative group\"\u003e\u003ca href=\"https://leetcode.com/problems/delete-the-middle-node-of-a-linked-list/\" target=\"_blank\"\u003e原始題目\u003c/a\u003e \n    \u003cdiv id=\"%E5%8E%9F%E5%A7%8B%E9%A1%8C%E7%9B%AE\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%E5%8E%9F%E5%A7%8B%E9%A1%8C%E7%9B%AE\" aria-label=\"定位點\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cp\u003e\n\n這題是給定一個不固定長度 \\(n\\) 的鏈結串列，然後要求刪除最中間的那個節點（ node ） （精確來說是第 \\(\\lfloor \\frac{n}{2} \\rfloor\\) 個節點）\u003c/p\u003e\n\n\n\u003ch2 class=\"relative group\"\u003e值得紀錄之處 \n    \u003cdiv id=\"%E5%80%BC%E5%BE%97%E7%B4%80%E9%8C%84%E4%B9%8B%E8%99%95\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%E5%80%BC%E5%BE%97%E7%B4%80%E9%8C%84%E4%B9%8B%E8%99%95\" aria-label=\"定位點\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cp\u003e這裡所謂的 good taste 是指利用一些技巧，去減少「特例」發生的情形，進而使程式碼更加乾脆俐落。舉例來說，原本在這題常見的解法有兩種：\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e先用迴圈把整個鏈結串列遍歷，計算有幾個節點。算完再跑一次 \u003ccode\u003efor\u003c/code\u003e 迴圈把最中間的節點刪除。\u003c/li\u003e\n\u003cli\u003e利用 \u003ccode\u003efast\u003c/code\u003e 和 \u003ccode\u003eslow\u003c/code\u003e 兩指標，丟進迴圈裡面， \u003ccode\u003efast\u003c/code\u003e 每回合前進兩格， \u003ccode\u003eslow\u003c/code\u003e 每回合前進一格，這樣只要一次迴圈就可以抓到要刪除的節點並且刪除。\u003cbr\u003e\n\n  \n\n\n\n\u003cdiv\n  \n    class=\"flex px-4 py-3 rounded-md bg-primary-100 dark:bg-primary-900\"\n  \u003e\n\n  \u003cspan\n    \n      class=\"text-primary-400 ltr:pr-3 rtl:pl-3 flex items-center\"\n    \u003e\n\n    \n\n  \u003cspan class=\"relative block icon\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"\u003e\u003cpath fill=\"currentColor\" d=\"M506.3 417l-213.3-364c-16.33-28-57.54-28-73.98 0l-213.2 364C-10.59 444.9 9.849 480 42.74 480h426.6C502.1 480 522.6 445 506.3 417zM232 168c0-13.25 10.75-24 24-24S280 154.8 280 168v128c0 13.25-10.75 24-23.1 24S232 309.3 232 296V168zM256 416c-17.36 0-31.44-14.08-31.44-31.44c0-17.36 14.07-31.44 31.44-31.44s31.44 14.08 31.44 31.44C287.4 401.9 273.4 416 256 416z\"/\u003e\u003c/svg\u003e\n\n  \u003c/span\u003e\n\n\n  \u003c/span\u003e\n\n  \u003cspan\n    \n      class=\"dark:text-neutral-300\"\n    \u003e兩者的時間複雜度都是 \\( \\log (n)\\), 但是後者的程式碼量會因為少一個迴圈而比較少，因此我以後者為比較標準。\u003c/span\u003e\n\u003c/div\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\n\n\u003ch3 class=\"relative group\"\u003e非 indirect pointer 的解 \n    \u003cdiv id=\"%E9%9D%9E-indirect-pointer-%E7%9A%84%E8%A7%A3\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%E9%9D%9E-indirect-pointer-%E7%9A%84%E8%A7%A3\" aria-label=\"定位點\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e此程式碼取自 leetcode 論壇的某位大大寫的\u003ca href=\"https://leetcode.com/problems/delete-the-middle-node-of-a-linked-list/solutions/2698219/delete-the-middle-node-of-a-linked-list/\" target=\"_blank\"\u003e詳解文章\u003c/a\u003e微調而得\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-cpp\" data-lang=\"cpp\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eSolution\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\tListNode\u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003e deleteMiddle(ListNode\u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003e head) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\t\u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e (head \u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003e next \u003cspan style=\"color:#f92672\"\u003e==\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enullptr\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\t\t\u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enullptr\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\tListNode \u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003eslow \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e head, \u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003efast \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e head \u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003e next \u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003e next;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\t\u003cspan style=\"color:#66d9ef\"\u003ewhile\u003c/span\u003e (fast \u003cspan style=\"color:#f92672\"\u003e!=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enullptr\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e fast \u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003e next \u003cspan style=\"color:#f92672\"\u003e!=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enullptr\u003c/span\u003e) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\t\tslow \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e slow \u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003e next;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\t\tfast \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e fast \u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003e next \u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003e next;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\t}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\tslow \u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003e next \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e slow \u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003e next \u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003e next;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\t\u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e head;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e};\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e可以注意到，上面的解法 (line 4) 會有一個特例 (edge case), 如果開頭是 \u003ccode\u003enullptr\u003c/code\u003e, 那就如何如何\u0026hellip;\u0026hellip;。有時候特例一多，可能會寫了整面的 \u003ccode\u003eif-else\u003c/code\u003e, 看了就痛苦😵‍💫。如果有個魔法可以使這個特例更減少，那程式碼就可以更精簡，這也是我這次的練習目標。\u003c/p\u003e","title":"2095. Delete the Middle Node of a Linked List","type":"posts"},{"content":"","date":"October 22, 2022","externalUrl":null,"permalink":"/tags/indirect-pointer/","section":"Tags","summary":"","title":"Indirect Pointer","type":"tags"},{"content":"","date":"October 11, 2022","externalUrl":null,"permalink":"/tags/daily/","section":"Tags","summary":"","title":"Daily","type":"tags"},{"content":"","date":"October 11, 2022","externalUrl":null,"permalink":"/posts/leetcode/","section":"posts-index","summary":"","title":"Leetcode 區","type":"posts"},{"content":" 部落格的 leetcode 區用途 # leetcode 區文章列表 # solutions source code # 想要在這個 leetcode 文章區紀錄 # 我在刷題時遇到的一些坑 看完覺得很酷的解題技巧 一些亂搞的奇技淫巧(可能是好笑的假解之類的~) 之後考慮在底下加上一個列表，可以自動更新並且記錄我的 AC 題目號碼以及題目名稱。但是目前看起來沒有很好用的輪子可以直接拿來用(目前看起來最接近的輪子，理論上可以做到每次 commit 這個部落格 repo 的時候透過 hook 自動更新 md, 但還是覺得不夠及時)，可能很久很久以後才會加 XDD Leetcode 解題狀態 # ","date":"October 11, 2022","externalUrl":null,"permalink":"/posts/leetcode/leetcode_homepage/","section":"posts-index","summary":"\u003ch2 class=\"relative group\"\u003e部落格的 leetcode 區用途 \n    \u003cdiv id=\"%E9%83%A8%E8%90%BD%E6%A0%BC%E7%9A%84-leetcode-%E5%8D%80%E7%94%A8%E9%80%94\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%E9%83%A8%E8%90%BD%E6%A0%BC%E7%9A%84-leetcode-%E5%8D%80%E7%94%A8%E9%80%94\" aria-label=\"定位點\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\n\n\u003ch3 class=\"relative group\"\u003e\u003ca href=\"/posts/leetcode/\"\u003e\u003cstrong\u003eleetcode 區文章列表\u003c/strong\u003e\u003c/a\u003e \n    \u003cdiv id=\"leetcode-%E5%8D%80%E6%96%87%E7%AB%A0%E5%88%97%E8%A1%A8\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#leetcode-%E5%8D%80%E6%96%87%E7%AB%A0%E5%88%97%E8%A1%A8\" aria-label=\"定位點\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h3\u003e\n\n\n\u003ch3 class=\"relative group\"\u003e\u003ca href=\"https://github.com/CollieIsCute/leetcode\" target=\"_blank\"\u003e\u003cstrong\u003esolutions source code\u003c/strong\u003e\u003c/a\u003e \n    \u003cdiv id=\"solutions-source-code\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#solutions-source-code\" aria-label=\"定位點\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h3\u003e\n\n\n\u003ch3 class=\"relative group\"\u003e想要在這個 leetcode 文章區紀錄 \n    \u003cdiv id=\"%E6%83%B3%E8%A6%81%E5%9C%A8%E9%80%99%E5%80%8B-leetcode-%E6%96%87%E7%AB%A0%E5%8D%80%E7%B4%80%E9%8C%84\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%E6%83%B3%E8%A6%81%E5%9C%A8%E9%80%99%E5%80%8B-leetcode-%E6%96%87%E7%AB%A0%E5%8D%80%E7%B4%80%E9%8C%84\" aria-label=\"定位點\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h3\u003e\n\u003col\u003e\n\u003cli\u003e我在刷題時遇到的一些坑\u003c/li\u003e\n\u003cli\u003e看完覺得很酷的解題技巧\u003c/li\u003e\n\u003cli\u003e一些亂搞的奇技淫巧(可能是好笑的假解之類的~)\u003c/li\u003e\n\u003cli\u003e之後考慮在底下加上一個列表，可以自動更新並且記錄我的 AC 題目號碼以及題目名稱。但是目前看起來沒有很好用的輪子可以直接拿來用(\u003ca href=\"https://github.com/skygragon/leetcode-cli\" target=\"_blank\"\u003e目前看起來最接近的輪子\u003c/a\u003e，理論上可以做到每次 commit 這個部落格 repo 的時候透過 hook 自動更新 md, 但還是覺得不夠及時)，可能很久很久以後才會加 XDD\u003c/li\u003e\n\u003c/ol\u003e\n\n\n\u003ch2 class=\"relative group\"\u003eLeetcode 解題狀態 \n    \u003cdiv id=\"leetcode-%E8%A7%A3%E9%A1%8C%E7%8B%80%E6%85%8B\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#leetcode-%E8%A7%A3%E9%A1%8C%E7%8B%80%E6%85%8B\" aria-label=\"定位點\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cp\u003e\n  \u003cfigure\u003e\n    \u003cimg class=\"my-0 rounded-md\" loading=\"lazy\" src=\"https://leetcard.jacoblin.cool/qetup1988?\u0026amp;theme=nord\u0026amp;radius=30\u0026amp;font=source_code_pro\" alt=\"leetcode status\" /\u003e\n    \n  \u003c/figure\u003e\n\u003c/p\u003e","title":"Leetcode 區","type":"posts"},{"content":"","date":"October 11, 2022","externalUrl":null,"permalink":"/posts/","section":"posts-index","summary":"","title":"posts-index","type":"posts"},{"content":"","date":"October 11, 2022","externalUrl":null,"permalink":"/posts/driving-lessons/","section":"posts-index","summary":"","title":"考駕照奇遇記","type":"posts"},{"content":"","date":"October 8, 2022","externalUrl":null,"permalink":"/tags/blog/","section":"Tags","summary":"","title":"Blog","type":"tags"},{"content":" 內容預告 # 這篇預計會介紹我怎麼從前端白紙，用了哪些工具、如何設定、然後成功弄出一個可以正常瀏覽的部落格～\n內容待補\n","date":"October 8, 2022","externalUrl":null,"permalink":"/posts/blog101/","section":"posts-index","summary":"\u003ch2 class=\"relative group\"\u003e內容預告 \n    \u003cdiv id=\"%E5%85%A7%E5%AE%B9%E9%A0%90%E5%91%8A\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%E5%85%A7%E5%AE%B9%E9%A0%90%E5%91%8A\" aria-label=\"定位點\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cp\u003e這篇預計會介紹我怎麼從前端白紙，用了哪些工具、如何設定、然後成功弄出一個可以正常瀏覽的部落格～\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e內容待補\u003c/strong\u003e\u003c/p\u003e","title":"blog 101","type":"posts"},{"content":"","date":"October 8, 2022","externalUrl":null,"permalink":"/tags/docker/","section":"Tags","summary":"","title":"Docker","type":"tags"},{"content":"","date":"October 8, 2022","externalUrl":null,"permalink":"/tags/hugo/","section":"Tags","summary":"","title":"Hugo","type":"tags"},{"content":" 這是我在大四下考駕照的紀錄，僅以此獻給我偉大的駕訓班 裏鍵張 教練。 （這是假名，如有雷同純屬巧合） 寫這個不是為了要罵他或報復他，只是想記錄我經歷了多荒謬的事情才拿到這張卡。得來不易啊！ 我是去一間在鳳山附近，叫做新永的駕訓班。因為湊團報，所以也沒有看評價，（ google map 上面的評價有多精彩晚點再說，那又是另一個故事）就跟同學找一找直接無腦衝。想不到，精彩的地獄生活就這樣開始\u0026hellip;\n「我很重視基本功」 # 第一天我比約定的時間（06:40 am）還要早了 10 幾分鐘到，我對他印象不錯。他比我早就到練習場了。他每次都非常早到練習場，之前同學也說要早點到，這樣就可以多開幾分鐘的車。\n「我很重視基本功，所以一開始你就先練習轉方向盤。」\n我那天真的就只有聽他長篇大論，和坐在一台沒辦法動的練習車上面轉方向盤。\n後來聽說好像是因為那天駕訓班沒有車可以讓我開，我不太確定。 他覺得轉方向盤非常的重要，如果沒有左手跟右手分別放在九點跟三點鐘的位置，那就會很嚴重。於是我的第一天就真的只有練轉方向盤，直到下課前 10 分鐘就叫我離開教具車，去駕訓班的櫃檯電腦練習筆試題目。接下來的每次駕訓班課程也都會像這樣被他偷 10 分鐘以上。第一天就在這種疑惑中結束。結束之後去吃早餐跟同學交換心得，其他人在練習前進後退，我只有轉方向盤的心得可以討論，真是謝囉ㄏㄏ\n「你覺得原因是什麼」 # 第二節課開始，我還是提早 10 幾分鐘到場。我想說昨天血虧，連油門都沒有摸到，今天要給他開回來。教練也很不負我望，教我念一次各種檢查的口訣，認得車子編號（駕訓場內每台車有個比車牌還大的編號牌，方便從側面辨識。）之後就上車。\n可是我坐後座\u0026hellip;\n碎碎念又要開始了 # 「你看，看仔細，我現在是不是把方向盤放開讓他回到原位了？」\n是\n「仔細看喔」 （接著就緩慢地往前開一段，車子偏掉了）\n「你看車子是不是歪掉了？」\n是\n「你覺得原因是什麼？」\n因為方向盤有誤差嗎？\n「不是，給你兩個提示：1. 下雨 2. 積水」\n\u0026hellip; （沒有答案於是沈默）\n我開始不知道他到底在幹嘛了，原來駕訓班一萬多塊的課程還包含益智遊戲環節。\n「你需要一點想像力啊。我就說你們現在的學生齁，只知道滑手機，都不會觀察生活周遭的環境。你覺得為什麼會積水？」\n因為路面的高度不同？\n「不是啦！你真的很沒有邏輯內，都給你這麼多線索還猜不到，」\n我這輩子好像也沒有幾次被嗆過沒有邏輯，害我隱隱不爽之餘也好奇他到底能吐出什麼好答案來。\n「就是因為路不平嘛！」\n\u0026hellip; （這到底跟我剛剛說的有什麼不一樣？氣到不知道要回什麼了）\n所以我剛剛到現在就這樣聽你講有的沒的聽 10 幾分鐘，就為了學您的邏輯推理嗎？我決定之後要用最簡短的回答快速跳過這個廢話劇情，不然我今天又是來聽演講的，真的是在哭\n「你們要多讀點書啦！你看教練就是讀很多書(以下省略ㄧ分鐘碎念)\u0026hellip;\u0026hellip;」（他在講這句的時候一直用一種非常嘲諷地快速搖頭 + 嘆氣。這個行為非常的令人煩躁，往後也會不斷出現，如果 google map 評分有激怒學員這項我一定給他滿分）\n後來翻了一下 google map 評論，還發現真的也有其他人被他的快速搖頭羞辱XD\n後來又聽他介紹了一下要用車子的哪個部位對齊路面，我想每個教練應該都大同小異，就跳過不寫。最後我只「順利」的開了前進後退兩三趟，就被教練指示開去停車了呢！真棒，我停車還賺到一個轉彎，今天收穫真豐碩。開車一點都不重要，能夠聽到要我讀書以及邏輯很差的建議才是對我人生最有幫助的呢！\n","date":"April 6, 2022","externalUrl":null,"permalink":"/posts/driving-lessons/1/","section":"posts-index","summary":"\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e這是我在大四下考駕照的紀錄，僅以此獻給我偉大的駕訓班 裏鍵張 教練。\u003c/strong\u003e （這是假名，如有雷同純屬巧合）\u003c/li\u003e\n\u003cli\u003e寫這個不是為了要罵他或報復他，只是想記錄我經歷了多荒謬的事情才拿到這張卡。得來不易啊！\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003cp\u003e我是去一間在鳳山附近，叫做新永的駕訓班。因為湊團報，所以也沒有看評價，（ google map 上面的評價有多精彩晚點再說，那又是另一個故事）就跟同學找一找直接無腦衝。想不到，精彩的地獄生活就這樣開始\u0026hellip;\u003c/p\u003e\n\n\n\u003ch2 class=\"relative group\"\u003e「我很重視基本功」 \n    \u003cdiv id=\"%E6%88%91%E5%BE%88%E9%87%8D%E8%A6%96%E5%9F%BA%E6%9C%AC%E5%8A%9F\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%E6%88%91%E5%BE%88%E9%87%8D%E8%A6%96%E5%9F%BA%E6%9C%AC%E5%8A%9F\" aria-label=\"定位點\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cp\u003e第一天我比約定的時間（06:40 am）還要早了 10 幾分鐘到，我對他印象不錯。他比我早就到練習場了。他每次都非常早到練習場，之前同學也說要早點到，這樣就可以多開幾分鐘的車。\u003c/p\u003e\n\u003cp\u003e「我很重視基本功，所以一開始你就先練習轉方向盤。」\u003c/p\u003e\n\u003cp\u003e我那天真的就只有聽他長篇大論，和坐在一台沒辦法動的練習車上面轉方向盤。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e後來聽說好像是因為那天駕訓班沒有車可以讓我開，我不太確定。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e他覺得轉方向盤非常的重要，如果沒有左手跟右手分別放在九點跟三點鐘的位置，那就會很嚴重。於是我的第一天就真的只有練轉方向盤，直到下課前 10 分鐘就叫我離開教具車，去駕訓班的櫃檯電腦練習筆試題目。接下來的每次駕訓班課程也都會像這樣被他偷 10 分鐘以上。第一天就在這種疑惑中結束。結束之後去吃早餐跟同學交換心得，其他人在練習前進後退，我只有轉方向盤的心得可以討論，真是謝囉ㄏㄏ\u003c/p\u003e\n\n\n\u003ch2 class=\"relative group\"\u003e「你覺得原因是什麼」 \n    \u003cdiv id=\"%E4%BD%A0%E8%A6%BA%E5%BE%97%E5%8E%9F%E5%9B%A0%E6%98%AF%E4%BB%80%E9%BA%BC\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%E4%BD%A0%E8%A6%BA%E5%BE%97%E5%8E%9F%E5%9B%A0%E6%98%AF%E4%BB%80%E9%BA%BC\" aria-label=\"定位點\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cp\u003e第二節課開始，我還是提早 10 幾分鐘到場。我想說昨天血虧，連油門都沒有摸到，今天要給他開回來。教練也很不負我望，教我念一次各種檢查的口訣，認得車子編號（駕訓場內每台車有個比車牌還大的編號牌，方便從側面辨識。）之後就上車。\u003c/p\u003e\n\u003cp\u003e可是我坐後座\u0026hellip;\u003c/p\u003e\n\n\n\u003ch3 class=\"relative group\"\u003e碎碎念又要開始了 \n    \u003cdiv id=\"%E7%A2%8E%E7%A2%8E%E5%BF%B5%E5%8F%88%E8%A6%81%E9%96%8B%E5%A7%8B%E4%BA%86\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%E7%A2%8E%E7%A2%8E%E5%BF%B5%E5%8F%88%E8%A6%81%E9%96%8B%E5%A7%8B%E4%BA%86\" aria-label=\"定位點\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h3\u003e\n\u003cp\u003e「你看，看仔細，我現在是不是把方向盤放開讓他回到原位了？」\u003c/p\u003e","title":"考駕照奇遇記-1","type":"posts"},{"content":" 全場滑手機 # 滑手機也是他的個人特色。我覺得應該可以這麼說，「在整個駕訓班課程內，他的手機跟他的嘴巴至少有一個東西會打開。當然，兩個都打開的情形也是不在少數。」當他講完前進後退之後，我們兩個剛換完座位就看到他開始滑手機。有時候他會盯著螢幕突然冒出一句：「油門/煞車不要踩那麼大力！」或者是「煞車不要踩那麼快！」等等警告，會不會其實他滑 line 只是偽裝，其實他的目的是在偷偷觀察我🤨？\n後來他在群組傳的各種通知訊息文法狗屁不通、句讀亂用。我只能從分開的詞彙推敲文意，這也更使我相信上述的推測。\n家人怎麼教你騎腳踏車 # 我忘記他是為了教什麼才會舉這個問題當作例子問我們，但我印象中這不是個精闢的比喻，只是個可有可無的例子。我本來覺得這個問題也沒什麼荒謬的點，只是課堂加入一些無謂的問答會使練習時間縮短，因此不喜歡他迂迴曲折的講解。不過這則 google map 評論使我笑出來，所以還是把它記錄在這篇文。\n物極必反相對論 # 「物極必反相對論！」\n這句格言在整個駕訓班課程不斷從他的口中聽到。它在我的印象中實在太有記憶點了。因為根據我的理解，物極必反是個四個字的成語，大概是在講中庸之道比較好，太過頭也容易產生反效果或者失敗等等\u0026hellip;\u0026hellip;的意思。至於相對論則是物理學上某個用來描述光速跟時間有關的理論。\n我大概有十天左右一直聽到這個詞彙卻不知其所以然，但本著節省時間練習開車的中心思想，我是絕對不會開口問的XD 直到有一天，我突然想通：「啊！左轉方向盤之後不就是要往右轉回來嗎？他該不會說的就是這個吧？」回想情境印證一下果然沒錯，是這個意思。頓時有點開心自己終於聽懂他到底在講什麼鬼，但同時也擔心自己是不是語言能力壞死所以終於可以理解這句話的「深意」。順便跟自己約定之後要盡量避免跟他溝通以降低自己上課時的血壓。 我只想問到底怎麼有人可以把中文講成這樣？為什麼不要就直接講方向盤就好啊啊啊啊啊（崩潰\n你覺得我的時薪有多少 # 「你知道為什麼教練都沒有年輕人嗎？」\n「因為駕訓班教練薪水太少了。你覺得我的時薪有多少？」\n我認真地估了一下，整個練習課程每天一小時 （扣掉被他叫去電腦刷題偷時間） ，持續一個月，平日上課假日放假。整個課程教練會有一半時間會在車上，後半課程會是一個小時都自己練習，沒有噪音的歡樂練車時光 可以快速累積控車的經驗。\n應該是每小時四百吧？\n「四百你給我啊（伸手）」\n後來聽他講，好像一個小時才一百多。我是不太相信啦，因為感覺教練有下場工作，應該可以拿更多才對？駕訓班除了油錢、車子保養跟講課的宣導費用（數十人分攤一位講者），還會需要其他支出嗎？\n心得（對於想考駕照的人真正有用的部分XD） # 一般可能比較需要注意的小細節 # 在駕訓班要想辦法讓教練趕快講完自己開，廢話十句不如自己開錯學到一個經驗。 我以為同一個駕訓班的教法都會一樣。想不到李教練教我開 S 型的開法，被驗收的另一位教練（好像規定指導教練跟駕照驗收教練不能相同）說很容易出錯，一直叫我方向盤要轉多一點怎麼樣的XD 反正就以當下坐在車上的教練為主，他們心情好考試就容易過～ 如果想考手排 # 一開始教練好像會為了衝駕訓班的通過率，拼命恐嚇＋威逼利誘我，想讓我改考自排(手排比自排還要容易熄火)。所以我一開始很挫，很想拼命爭取自己練習的時間來降低手排熄火的機率。 我下課後也沒有特別練，只是該練習我就都不會缺課，練習時間應該是足夠讓手排車穩穩考過駕照的。 我到最後練得差不多了，還是有剩幾堂課的練習時間沒用完。多出來的時間被我拿來挑戰快速開 S 型彎道，玩到最高紀錄是進去出來只花了 55 秒，不能熄火也不能擦到旁邊安全島有夠刺激🤪 後來考試的教練還說我油門跟煞車控制得很穩，聽他講起來應該算是高標。所以想考手排的人不用理教練的威逼利誘，衝就對了！ 後記 # 好啦，李教練其實也不全都是缺點，也是要看看人家的優點。我覺得他很準時，而且跟他請假他會願意讓我在別的時段補課。沒了。 這間駕訓班好像其他教練也有在 google map 上被罵，但是我的李教練應該就是籤王了。但即使是籤王也是有人給他 google map 好評，去之前可以先看他被罵的部分自己能不能接受。當然也有遇到人家的教練對我很親切的～算是要挑教練的駕訓班，不知道其他間如何。\n一起去的同學教了我一招：「我到後面已經不想理他，他不管說什麼我都說好。結果後來他罵我：『你車子開那麼左邊，旁邊是要再停一輛摩托車嗎？』我也回他：『好。』從那次之後他就閉嘴了」 ","date":"April 6, 2022","externalUrl":null,"permalink":"/posts/driving-lessons/2/","section":"posts-index","summary":"\u003ch2 class=\"relative group\"\u003e全場滑手機 \n    \u003cdiv id=\"%E5%85%A8%E5%A0%B4%E6%BB%91%E6%89%8B%E6%A9%9F\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%E5%85%A8%E5%A0%B4%E6%BB%91%E6%89%8B%E6%A9%9F\" aria-label=\"定位點\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cp\u003e滑手機也是他的個人特色。我覺得應該可以這麼說，「在整個駕訓班課程內，他的手機跟他的嘴巴至少有一個東西會打開。當然，兩個都打開的情形也是不在少數。」當他講完前進後退之後，我們兩個剛換完座位就看到他開始滑手機。有時候他會盯著螢幕突然冒出一句：「油門/煞車不要踩那麼大力！」或者是「煞車不要踩那麼快！」等等警告，會不會其實他滑 line 只是偽裝，其實他的目的是在偷偷觀察我🤨？\u003c/p\u003e\n\u003cp\u003e\u003cdel\u003e後來他在群組傳的各種通知訊息文法狗屁不通、句讀亂用。我只能從分開的詞彙推敲文意，這也更使我相信上述的推測。\u003c/del\u003e\u003c/p\u003e\n\n\n\u003ch2 class=\"relative group\"\u003e家人怎麼教你騎腳踏車 \n    \u003cdiv id=\"%E5%AE%B6%E4%BA%BA%E6%80%8E%E9%BA%BC%E6%95%99%E4%BD%A0%E9%A8%8E%E8%85%B3%E8%B8%8F%E8%BB%8A\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%E5%AE%B6%E4%BA%BA%E6%80%8E%E9%BA%BC%E6%95%99%E4%BD%A0%E9%A8%8E%E8%85%B3%E8%B8%8F%E8%BB%8A\" aria-label=\"定位點\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cp\u003e我忘記他是為了教什麼才會舉這個問題當作例子問我們，但我印象中這不是個精闢的比喻，只是個可有可無的例子。我本來覺得這個問題也沒什麼荒謬的點，只是課堂加入一些無謂的問答會使練習時間縮短，因此不喜歡他迂迴曲折的講解。不過這則 \u003ca href=\"https://goo.gl/maps/ZGY12va56FXevR3CA\" target=\"_blank\"\u003egoogle map 評論\u003c/a\u003e使我笑出來，所以還是把它記錄在這篇文。\u003cbr\u003e\n\n    \u003cfigure\u003e\n      \u003cimg\n        class=\"my-0 rounded-md\"\n        loading=\"lazy\"\n        srcset=\"\n        /posts/driving-lessons/2/1_hu_d6b7545c911ac4ee.png 330w,\n        /posts/driving-lessons/2/1_hu_89c793d1ba2b37d9.png 660w,\n        /posts/driving-lessons/2/1_hu_5f6e7c8017e7102.png 1024w,\n        /posts/driving-lessons/2/1_hu_e7f21f27368b339e.png 2x\"\n        src=\"/posts/driving-lessons/2/1_hu_89c793d1ba2b37d9.png\"\n        alt=\"\"\n      /\u003e\n      \n    \u003c/figure\u003e\n\u003c/p\u003e\n\n\n\u003ch2 class=\"relative group\"\u003e物極必反相對論 \n    \u003cdiv id=\"%E7%89%A9%E6%A5%B5%E5%BF%85%E5%8F%8D%E7%9B%B8%E5%B0%8D%E8%AB%96\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%E7%89%A9%E6%A5%B5%E5%BF%85%E5%8F%8D%E7%9B%B8%E5%B0%8D%E8%AB%96\" aria-label=\"定位點\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cp\u003e「物極必反相對論！」\u003c/p\u003e\n\u003cp\u003e這句格言在整個駕訓班課程不斷從他的口中聽到。它在我的印象中實在太有記憶點了。因為根據我的理解，物極必反是個四個字的成語，大概是在講中庸之道比較好，太過頭也容易產生反效果或者失敗等等\u0026hellip;\u0026hellip;的意思。至於相對論則是物理學上某個用來描述光速跟時間有關的理論。\u003c/p\u003e\n\u003cp\u003e我大概有十天左右一直聽到這個詞彙卻不知其所以然，但本著節省時間練習開車的中心思想，我是絕對不會開口問的XD 直到有一天，我突然想通：「啊！左轉方向盤之後不就是要往右轉回來嗎？他該不會說的就是這個吧？」回想情境印證一下果然沒錯，是這個意思。頓時有點開心自己終於聽懂他到底在講什麼鬼，但同時也擔心自己是不是語言能力壞死所以終於可以理解這句話的「深意」。\u003cdel\u003e順便跟自己約定之後要盡量避免跟他溝通以降低自己上課時的血壓。\u003c/del\u003e 我只想問到底怎麼有人可以把中文講成這樣？為什麼不要就直接講方向盤就好啊啊啊啊啊（崩潰\u003c/p\u003e\n\n\n\u003ch2 class=\"relative group\"\u003e你覺得我的時薪有多少 \n    \u003cdiv id=\"%E4%BD%A0%E8%A6%BA%E5%BE%97%E6%88%91%E7%9A%84%E6%99%82%E8%96%AA%E6%9C%89%E5%A4%9A%E5%B0%91\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%E4%BD%A0%E8%A6%BA%E5%BE%97%E6%88%91%E7%9A%84%E6%99%82%E8%96%AA%E6%9C%89%E5%A4%9A%E5%B0%91\" aria-label=\"定位點\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cp\u003e「你知道為什麼教練都沒有年輕人嗎？」\u003cbr\u003e\n「因為駕訓班教練薪水太少了。你覺得我的時薪有多少？」\u003c/p\u003e","title":"考駕照奇遇記-2 (完)","type":"posts"},{"content":"","externalUrl":null,"permalink":"/en/","section":"Blowfish","summary":"","title":"Blowfish","type":"page"},{"content":"","externalUrl":null,"permalink":"/en/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"","externalUrl":null,"permalink":"/en/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"}]